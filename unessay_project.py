# -*- coding: utf-8 -*-
"""Unessay project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YwNL9yop9ptgDz7A6jB6C5DDm4yBCJ3u
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from wordcloud import WordCloud
from collections import Counter
from bs4 import BeautifulSoup
import pymupdf as fitz
import io
import re
import nltk
import networkx as nx
import seaborn as sns


st.title("Jikji vs. King James Bible: A Text Analysis")

from nltk.corpus import stopwords
nltk.download('stopwords')

# Function to extract text from a PDF
def extract_text_from_pdf(pdf_file):
    if pdf_file is not None:
        pdf_bytes = pdf_file.read()
        pdf_document = fitz.open(stream=io.BytesIO(pdf_bytes), filetype="pdf")
        
        text = ""
        for page in pdf_document:
            text += page.get_text("text") + " "
        return text
    return ""

def extract_text_from_html(html_file):
    """Reads and extracts text from an uploaded HTML file in Streamlit."""
    if html_file is not None:
        html_content = html_file.read().decode("utf-8")

        soup = BeautifulSoup(html_content, "html.parser")
        text = soup.get_text()
        return text
    return ""

jikji_file = st.file_uploader("Upload Jikji pdf", type=["pdf"])
kjv_file = st.file_uploader("Upload King James Bible HTML", type=["html"])

if jikji_file and kjv_file:

    jikji_text = extract_text_from_pdf(jikji_file)
    kjv_text = extract_text_from_html(kjv_file)


    def preprocess_text(text):
        words = re.findall(r'\b[a-zA-Z]+\b', text.lower())
        stop_words = set(stopwords.words('english'))
        filtered_words = [word for word in words if word not in stop_words]
        return filtered_words


    jikji_words = preprocess_text(jikji_text)
    kjv_words = preprocess_text(kjv_text)


    jikji_word_counts = Counter(jikji_words)
    kjv_word_counts = Counter(kjv_words)


    jikji_word_freq_df = pd.DataFrame(jikji_word_counts.items(), columns=["Word", "Frequency"])
    jikji_word_freq_df = jikji_word_freq_df.sort_values(by="Frequency", ascending=False)

    kjv_word_freq_df = pd.DataFrame(kjv_word_counts.items(), columns=["Word", "Frequency"])
    kjv_word_freq_df = kjv_word_freq_df.sort_values(by="Frequency", ascending=False)



    st.subheader("Top 10 Most Frequent Words in Jikji")
    fig, ax = plt.subplots()
    jikji_word_freq_df.head(10).plot(kind="bar", x="Word", y="Frequency", legend=False, color="skyblue", ax=ax)
    plt.xticks(rotation=45)
    st.pyplot(fig)

    st.subheader("Top 10 Most Frequent Words in King James Bible")
    fig, ax = plt.subplots()
    kjv_word_freq_df.head(10).plot(kind="bar", x="Word", y="Frequency", legend=False, color="lightcoral", ax=ax)
    plt.xticks(rotation=45)
    st.pyplot(fig)

    unique_jikji_words = len(set(jikji_words)) / len(jikji_words)
    unique_kjv_words = len(set(kjv_words)) / len(kjv_words)

    st.subheader("Standardization of Language in Jikji vs. KJV")
    st.write("The level of word repetition can indicate standardization in print.")
    st.metric(label="Jikji Unique Word Ratio", value=round(unique_jikji_words, 4))
    st.metric(label="KJV Unique Word Ratio", value=round(unique_kjv_words, 4))



    st.success("Complete")

st.info("Upload the Jikji pdf and King James Bible html file")
